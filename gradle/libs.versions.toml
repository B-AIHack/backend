[versions]
jakarta-persistence-api = "3.1.0"
jakarta-validation-api = "3.0.2"
hibernate-core = "6.2.22.Final"
spring-context = "6.0.18"
commons-lang3 = "3.14.0"
lombok = "1.18.34"
hibernate-jpamodelgen = "6.4.4.Final"
junit-jupiter = "5.9.3"
assertj = "3.21.0"
junit-platform-launcher = "1.9.3"
spring = "6.0.18"
jackson-core = "2.15.4"
spring-cloud-dependecies = "2023.0.3"
spring-boot = "3.2.12"
sonarqube = "5.1.0.4882"
spring-dependecy-management = "1.1.6"
jib = "3.4.3"
test-logger = "3.2.0"
fastcsv = "3.2.0"
commons-io = "2.11.0"
commons-compress = "1.26.1"
commons-collections = "4.4"
bbusiness-security-starter = "1.0.14"
logger-decorator = "0.7.4"
mapstruct = "1.5.5.Final"
spring-kafka = "3.0.17"
kafka-clients = "3.0.0"
springdoc-starter = "2.6.0"
guava = "32.0.0-jre"
ibank-models = "CPT-655-04-BEREKE-SNAPSHOT"
eds-facade = "0.1.8-CPT-1073-5-SNAPSHOT"
spring-security-test = "6.3.3"
embedded-database-test = "2.5.1"
easy-random = "5.0.0"
jetbrains-annotations = "24.0.0"
postgresql = '42.7.3'
snakeyaml = '2.2'

[libraries]
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence-api" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta-validation-api" }
hibernate-core = { module = "org.hibernate.orm:hibernate-core", version.ref = "hibernate-core" }
spring-context =  { module = "org.springframework:spring-context", version.ref = "spring-context" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
hibernate-jpamodelgen = { module = "org.hibernate.orm:hibernate-jpamodelgen", version.ref = "hibernate-jpamodelgen" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
junit-platform-launcher = {module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform-launcher" }
spring-web = {module = "org.springframework:spring-web", version.ref = "spring" }
spring-data-commons = {module ="org.springframework.data:spring-data-commons", version.ref = "spring-boot" }
jackson-annotations = {module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson-core" }
spring-cloud-dependecies = {module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud-dependecies" }
fastcsv = { module = "de.siegmar:fastcsv", version.ref = "fastcsv" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons-io" }
commons-compress = { module = "org.apache.commons:commons-compress", version.ref = "commons-compress" }
commons-collections = { module = "org.apache.commons:commons-collections4", version.ref = "commons-collections" }
bbusiness-security-starter = { module = "kz.berekebank:bbusiness-security-starter", version.ref = "bbusiness-security-starter" }
logger-decorator = { module = "kz.berekebank:logger-decorator", version.ref = "logger-decorator" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring-kafka" }
kafka-clients = { module = "org.apache.kafka:kafka-clients", version.ref = "kafka-clients" }
springdoc-starter = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-starter" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
ibank-models = { module = "com.infin.it:models", version.ref = "ibank-models" }
eds-facade = { module = "kz.berekebank.eds-service:eds-facade", version.ref = "eds-facade" }
spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "spring-security-test" }
embedded-database-test = { module = "io.zonky.test:embedded-database-spring-test", version.ref = "embedded-database-test" }
easy-random = { module = "org.jeasy:easy-random-core", version.ref = "easy-random" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
spring-dependecy-management = { id = "io.spring.dependency-management", version.ref = "spring-dependecy-management" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }
test-logger = { id = "com.adarshr.test-logger", version.ref = "test-logger" }
